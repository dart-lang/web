name: Dart CI

on:
  # Run on PRs and pushes to the default branch.
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run nightly.
    - cron: "0 0 * * 0"

env:
  PUB_ENVIRONMENT: bot.github

jobs:
  # Check code formatting and static analysis on a single OS (linux)
  # against Dart dev.
  analyze:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # TODO(srujzs): Replace with stable when 3.3 is out.
        sdk: [dev, 3.3]
    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b
      - uses: dart-lang/setup-dart@fedb1266e91cf51be2fdb382869461a434b920a3
        with:
          sdk: ${{ matrix.sdk }}
      - id: install
        name: Install dependencies
        run: dart pub get
      - name: Check formatting
        run: dart format --output=none --set-exit-if-changed .
        if: always() && steps.install.outcome == 'success'
      - name: Analyze code
        run: dart analyze --fatal-infos
        if: always() && steps.install.outcome == 'success'

  # Run tests on a matrix of several SDK releases.
  test:
    needs: analyze
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        sdk: [dev, 3.3]
    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b
      - uses: dart-lang/setup-dart@fedb1266e91cf51be2fdb382869461a434b920a3
        with:
          sdk: ${{ matrix.sdk }}
      - name: Install dependencies
        run: dart pub get
      - name: Run Chrome tests - js
        run: dart test --platform chrome
      - name: Run Chrome tests - wasm
        run: dart test --platform chrome --compiler dart2wasm

  # Ensure the generation script runs.
  generation:
    needs: analyze
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        sdk: [dev]
    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b
      - uses: dart-lang/setup-dart@fedb1266e91cf51be2fdb382869461a434b920a3
        with:
          sdk: ${{ matrix.sdk }}
      - name: Install Dart dependencies
        run: dart pub get
      - name: Install Node dependencies
        run: npm install
        working-directory: tool/generator
      - name: Run the generator
        run: dart tool/update_bindings.dart
      - name: Analyze code
        run: dart analyze --fatal-infos

  # Test the contributed `dart fix` fixes.
  dart-fix:
    needs: analyze
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        sdk: [main]
    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b
      - uses: dart-lang/setup-dart@fedb1266e91cf51be2fdb382869461a434b920a3
        with:
          sdk: ${{ matrix.sdk }}
      - name: Install Dart dependencies
        run: dart pub get
      - name: Test the declarative fixes
        run: dart fix --compare-to-golden
        working-directory: test_fixes
